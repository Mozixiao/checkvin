#!/bin/bash

WEIGHTS=(8 7 6 5 4 3 2 10 0 9 8 7 6 5 4 3 2)

MANUF_LIST="AAV,South Africa,Volkswagen
AFA,South Africa,Ford
CL9,Tunisia,Wallyscar
JA,Japan,Isuzu
JC1,Japan,Fiat Automobiles/Mazda
JF,Japan,Fuji Heavy Industries
JHL,Japan,Honda
JHM,Japan,Honda
JMB,Japan,Mitsubishi
JMZ,Japan,Mazda
JN,Japan,Nissan
JS,Japan,Suzuki
JT,Japan,Toyota
JY,Japan,Yamaha
KL,South Korea,Daewoo/GM Korea
KMH,South Korea,Hyundai
KN,South Korea,Kia
KPT,South Korea,SsangYong
NMT,Turkey,Toyota
SAJ,United Kingdom,Jaguar
SAL,United Kingdom,Land Rover
SAR,United Kingdom,Rover
SAT,United Kingdom,Triumph
SB1,United Kingdom,Toyota
SCC,United Kingdom,Lotus Cars
SCE,United Kingdom,DeLorean
SFD,United Kingdom,Alexander Dennis
SHH,United Kingdom,Honda
SHS,United Kingdom,Honda
SJN,United Kingdom,Nissan
TCC,Switzerland,Micro Compact Car AG,(SMART 1998-1999)
TMA,Czech Republic,Hyundai
TMB,Czech Republic,Škoda
TRU,Hungary,Audi
TSM,Hungary,Suzuki
U5Y,Slovakia,Kia
UU,Romania,Dacia
VA0,Austria,OAF
VF1,France,Renault
VF2,France,Renault
VF3,France,Peugeot
VF4,France,Talbot
VF5,France,Iveco Unic SA
VF6,France,Renault Trucks/Volvo
VF7,France,Citroën
VF8,France,Matra/Talbot/Simca
VF9,France,Bugatti
VFE,France,IvecoBus
VNK,France,Toyota
VSS,Spain,SEAT
VV9,Spain,Tauro Sport Auto
WAG,Germany,Neoplan
WAU,Germany,Audi
WAP,Germany,Alpina
WBA,Germany,BMW
WBS,Germany,BMW M
WDB,Germany,Mercedes-Benz
WDC,Germany,DaimlerChrysler AG/Daimler AG
WDD,Germany,DaimlerChrysler AG/Daimler AG
WMX,Germany,DaimlerChrysler AG/Daimler AG
WEB,Germany,EvoBus
WF0,Germany,Ford of Europe
WJM,Germany,Iveco
WJR,Germany,Irmscher
WKK,Germany,Kässbohrer
WMA,Germany,MAN
WME,Germany,Smart
WMW,Germany,Mini
WP0,Germany,Porsche car
WP1,Germany,Porsche SUV
WUA,Germany,Quattro
WVG,Germany,Volkswagen
WVW,Germany,Volkswagen
WV1,Germany,Volkswagen Commercial Vehicles
WV2,Germany,Volkswagen Commercial Vehicles
W0L,Germany,Opel/Vauxhall
W0SV,Germany,Opel Special Vehicles
YK1,Finland,Saab
YS2,Sweden,Scania
YS4,Sweden,Scania
YS3,Sweden,Saab
YTN,Sweden,Saab NEVS
YV1,Sweden,Volvo Cars
YV3,Sweden,Volvo Buses
ZA9,Italy,Bugatti
ZAM,Italy,Maserati
ZAR,Italy,Alfa Romeo
ZCF,Italy,Iveco
ZFA,Italy,Fiat Automobiles
ZFF,Italy,Ferrari
ZGA,Italy,IvecoBus
ZHW,Italy,Lamborghini
ZLA,Italy,Lancia
1B,United States,Dodge
1C,United States,Chrysler
1F,United States,Ford
1G,United States,General Motors
1G3,United States,Oldsmobile
1G9,United States,Google
1GC,United States,Chevrolet
1GM,United States,Pontiac
1HG,United States,Honda
1J,United States,Jeep
1L,United States,Lincoln
1M,United States,Mercury
1N,United States,Nissan
1VW,United States,Volkswagen
1YV,United States,Mazda
2F,Canada,Ford
2G,Canada,General Motors
2G1,Canada,Chevrolet
2G2,Canada,Pontiac
2HG,Canada,Honda
2HH,Canada,Acura
2HJ,Canada,Honda
2HK,Canada,Honda
2HM,Canada,Hyundai
2M,Canada,Mercury
2T,Canada,Toyota
3F,Mexico,Ford
3G,Mexico,General Motors
3HG,Mexico,Honda
3HM,Mexico,Honda
3N,Mexico,Nissan
3VW,Mexico,Volkswagen
4F,United States,Mazda
4J,United States,Mercedes-Benz
4M,United States,Mercury
4S3,United States,Subaru
4S4,United States,Subaru
4S6,United States,Honda
4T,United States,Toyota
4US,United States,BMW
5FN,United States,Honda
5J6,United States,Honda
5L,United States,Lincoln
5T,United States,Toyota
5X,United States,Hyundai/Kia
5YJ,United States,Tesla
55,United States,Mercedes-Benz
6F,Australia,Ford
6G,Australia,General Motors
6G1,Australia,Chevrolet
6G2,Australia,Pontiac
6H,Australia,Holden
6MM,Australia,Mitsubishi
6T1,Australia,Toyota
8AP,Argentina,Fiat
8AT,Argentina,Iveco
9BD,Brazil,Fiat Automóveis
9BW,Brazil,Volkswagen
93H,Brazil,Honda
93W,Brazil,Fiat Professional
93Z,Brazil,Iveco
9BH,Brazil,Hyundai
9BS,Brazil,Scania"

get_manuf() {
	local VIN=${1} 

	# check 2 digit code first
	mcode="${VIN:0:2},"
	manuf=$(echo -e "${MANUF_LIST}" | grep "^${mcode}" | cut -f2- -d',' 2> /dev/null)
	if [ -z "${manuf}" ] ; then
		mcode="${VIN:0:3},"
		manuf=$(echo -e "${MANUF_LIST}" | grep "^${mcode}" | cut -f2- -d',' 2> /dev/null)
	fi

	echo "${manuf}"
}

check_vin() {
	local VIN=${1}

	if [ ${#VIN} != 17 ]; then
	    echo "${VIN:-(empty)}: must have 17 chars in a VIN"
	    return
	fi

    # make vin upper case
    VIN=$(echo ${VIN} | tr  "[:lower:]" "[:upper:]")

    echo ${VIN} | grep -E '[A-HJ-NPR-YZ0-9]{17}' > /dev/null
    if [ $? != 0 ] ; then
        echo "${VIN}: contains invalid characters"
        return
    fi

	trans_vin=$(echo $VIN | tr ABCDEFGHJKLMNPRSTUVWXYZ 12345678123457923456789)
	sum=0
	for n in $(seq 0 16); do
	    sum=$((sum+=${WEIGHTS[$n]}*${trans_vin:$n:1}))
	done
	check_digit=$(($sum % 11))
	if [ $check_digit == 10 ]; then
	    $check_digit="X"
	fi

	if [ ${VIN:8:1} != "$check_digit" ]; then
	    echo "${VIN}: Expected check digit of $check_digit, not ${VIN:8:1}, VIN invalid"
	else
	    minfo="$(get_manuf ${VIN})"

        if [ -z "${minfo}" ] ; then
            echo "${VIN}: Invalid manufacturer code ${VIN:0:3}"
        else
    	    echo "${VIN}: OK"
	    fi
	fi
}

if [ -n "${1}" -a "${1}" != "-" ]; then
    check_vin "${1}"
else
    [ "${1}" == "-" ] && while read vin; do
        check_vin "${vin}"
    done
fi
